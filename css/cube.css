body {
    font-family: 'Helvetica Neue', sans-serif;
    font-size: 20px;
    font-weight: 200;
    text-transform: uppercase;
}

#container {
    /**
     * This places the z=0 plane away from us, so the entire cube is in front of us;
     * you can read more at https://developer.mozilla.org/en-US/docs/Web/CSS/perspective
     */
    perspective: 3000px;

    margin-top: 16px;
}

#cube-wrapper {
    position: relative;
    height: 600px;
    width: 680px;
    margin: 50px auto;
}

/**
 * @amirmikhak
 * Controls styling
 */
#controls {
    width: 100%;
    text-align: center;
    text-transform: uppercase;
    position: absolute;
    bottom: -120px;
    background: #fff;
    z-index: 2;
    font-size: 0;

    -webkit-user-select: none;
}

.control-button:not(.radio-tab) {
    padding: 12px 24px;
}

.control-button:hover {
    background: #aaa;
}

.control-button:active {
    background-color: #999;
}

.control-button {
    box-sizing: border-box;
    position: relative;
    display: inline-block;
    margin: 16px 8px 0 8px;
    padding: 12px 0;
    border: 1px solid #ccc;
    width: auto;
    background-color: #ccc;
    color: #555;
    font-size: 20px;
    letter-spacing: 0.125em;
    text-shadow: 0px 1px 3px #999;
    cursor: pointer;
    text-align: center;
}

#play.playing {
    background-color: #999;
}

#playback-controls input {
    text-align: center;
    font-family: 'Helvetica Neue';
    font-size: 20px;
}

.radio-tabs {
    letter-spacing: 0.125em;

    display: flex;
    flex-direction: row;
    justify-content: space-between;
    -webkit-user-select: none;
}

.radio-tabs input[type="radio"] {
    display: none;
}

.radio-tabs .radio-tab {
    flex: 1;
    font-size: 16px;
}

.control-button.radio-tab {
    padding: 12px 0;
    margin: 0 2px;
}

.radio-tabs input[type="radio"]:checked + .radio-tab {
    background-color: #999;
}

/**
 * @amirmikhak
 * List styling
 */
.shape-list, .color-list {
    display: block;
    width: 62px;
    height: auto;
    margin: 0;
    padding: 0;
    font-size: 0;
}

.shape-list .swatch, .color-list .swatch {
    box-sizing: border-box;
    position: relative;
    display: inline-block;
    margin: 8px;
    width: 46px;
    height: 46px;
    cursor: pointer;
    box-shadow: 0 1px 5px #777;
}

.shape-list .swatch {
    opacity: 0.5;
}

.shape-list .swatch:hover {
    opacity: 1;
}

.color-list .swatch > div {
    box-sizing: border-box;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: attr(data-color); /* someday this will work, but not yet. JS to the rescue! */
}

.color-list .swatch > input[type="radio"] {
    display: none;
}

.color-list .swatch > input[type="radio"]:checked + div {
    border: 4px solid rgba(190, 190, 190, 1);
}


/**
 * @amirmikhak
 * Cube and cell styling
 */
#cube {
    position: relative;
    margin: 100px auto;
}

.cell {
    position: absolute;
    border: 1px solid rgba(0, 0, 0, 0);
    background-color: rgba(0, 0, 0, 0);
    opacity: 0.8;
}

.cell:after {
    /*
     * @amirmikhak
     * Mimic the vertical "sticks" to which the LEDs are attached in the cube
     */
    content: '';    /* necessary to make the pseudo-element render */
    position: absolute;
    top: 0;
    left: calc(50% - 1px);
    bottom: 0;
    right: calc(50%);
    border: 1px solid #ccc;
}

.cell:not([data-depth="0"])  {
    /*
     * @amirmikhak
     * The top row needs to cut the "stick" in half because it doesn't continue above
     * the LED in the actual box.
     */
     opacity: 0.2;
}

.cell[data-row="0"]:after  {
    /*
     * @amirmikhak
     * The top row needs to cut the "stick" in half because it doesn't continue above
     * the LED in the actual box.
     */
    top: 50%;
}

.cell[data-row="7"]:before  {
    /*
     * @amirmikhak
     * This style is an effort to make show a "base" for the cube, but it doesn't work.
     * Instead, the rotateX(90deg) makes the element invisible from the front face, but
     * is also not visible from the side or bottom. I'm not sure why elements seem not
     * to have any depth...
     */
    transform: translateY(50%) rotateX(90deg);
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background-color: rgba(50, 50, 50, 0.5);
}

.led {
    position: relative;
    width: 15%;
    height: 15%;
    border-radius: 50%;
    top: 50%;
    left: 50%;
    /* Center the led vertically and horizontally in the cell; you can read more about the technique at http://zerosixthree.se/vertical-align-anything-with-just-3-lines-of-css/ */
    transform: translateY(-50%) translateX(-50%);

    /*
     * @amirmikhak
     * Show the LED "in front" of the "stick" that holds the LEDs.
     */
    z-index: 1;
}

.led.on {
    opacity: 1;
}

.led:not(.on) {
    /* A selector for all LEDs which do _not_ have the class 'on', you can read more at https://developer.mozilla.org/en-US/docs/Web/CSS/:not */

    opacity: 0.25;
}

